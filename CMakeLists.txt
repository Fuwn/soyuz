# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.15)

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

# Regenerate CMakeLists.txt automatically in the root project
set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr
	include("cmake/cmkr/cmkr.cmake" OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)
endif()

# Create a configure-time dependency on cmake.toml to improve IDE support
if(CMKR_ROOT_PROJECT)
	configure_file(cmake.toml cmake.toml COPYONLY)
endif()

project(soyuz
	LANGUAGES
		CXX
		C
	VERSION
		1.1.2
	DESCRIPTION
		"ðŸš€ Discord RPC Blocker for Lunar Client"
)

include(FetchContent)

message(STATUS "Fetching fmt (8.1.1)...")
FetchContent_Declare(
	fmt
	GIT_REPOSITORY
		https://github.com/fmtlib/fmt
	GIT_TAG
		8.1.1
)
FetchContent_MakeAvailable(fmt)

# Target soyuz
set(CMKR_TARGET soyuz)
set(soyuz_SOURCES "")

list(APPEND soyuz_SOURCES
	"soyuz/library.cc"
	"soyuz/soyuz.cc"
	"soyuz/tray.cc"
	"resource/resource.rc"
)

list(APPEND soyuz_SOURCES
	cmake.toml
)

set(CMKR_SOURCES ${soyuz_SOURCES})
add_executable(soyuz)

if(soyuz_SOURCES)
	target_sources(soyuz PRIVATE ${soyuz_SOURCES})
endif()

get_directory_property(CMKR_VS_STARTUP_PROJECT DIRECTORY ${PROJECT_SOURCE_DIR} DEFINITION VS_STARTUP_PROJECT)
if(NOT CMKR_VS_STARTUP_PROJECT)
	set_property(DIRECTORY ${PROJECT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT soyuz)
endif()

source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${soyuz_SOURCES})

target_compile_options(soyuz PRIVATE
	"/W4"
	"/WX"
)

target_include_directories(soyuz PRIVATE
	"include/"
)

target_link_libraries(soyuz PRIVATE
	fmt::fmt
)

set_target_properties(soyuz PROPERTIES
	CMAKE_CXX_EXTENSIONS
		OFF
	CXX_STANDARD
		23
	CXX_STANDARD_REQUIRED
		ON
	WIN32_EXECUTABLE
		ON
)

unset(CMKR_TARGET)
unset(CMKR_SOURCES)

